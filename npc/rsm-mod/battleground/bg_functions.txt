//===== rAthena Script =======================================
//= BattleGround Expansion - Funções Globais
//===== Por: =================================================
//= RomuloSM (sbk_)
//===== Versão Atual: ========================================
//= 1.0
//===== Compátivel com: ======================================
//= rAthena RSM Mod
//===== Descrição: ===========================================
//= Funções Globais das Batalhas Campais
//===== Comentários Adicional: ===============================
//= 1.0 Primeira versão.[RomuloSM]
//===== Contato: =============================================
//= Email: romulodevel@gmail.com
//= Facebook: https://www.facebook.com/RomuloDevel
//============================================================

// Badge Reward Function
//============================================================
function	script	F_BG_Badge	{
	.@BGTeam$ = getarg(1);
	.@BGType$ = getarg(2);
	.@BGUID = getarg(3);
	
	if( !getbattleflag("bg_reward_enable") ) {
		if (.@BGType$ == "Tierra") {
			set .@badge,7828; //BF_Badge1
			set .@amount_win,3;
			set .@amount_lose,1;
			set .@amount_tie,1;
		} else if (.@BGType$ == "Flavius") {
			set .@badge,7829; //BF_Badge2
			set .@amount_win,9;
			set .@amount_lose,3;
			set .@amount_tie,3;
		} else if (.@BGType$ == "Kingdom") {
			set .@badge,7773; //War_Badge
			set .@amount_win,9;
			set .@amount_lose,3;
			set .@amount_tie,3;
		} else if(.@BGType$ == "Valfreyja") {
			set .@badge,7828;
			set .@amount_win,5;
			set .@amount_lose,3;
			set .@amount_tie,3;
		} else if(.@BGType$ == "Valfreyja2") {
			set .@badge,7828;
			set .@amount_win,7;
			set .@amount_lose,5;
			set .@amount_tie,5;
		} else
			return;
	}

	if (getarg(0) == 1) {
		set .@amount, .@amount_win;
		if (.@BGTeam$ == "Guillaume") {
			mes "[Axl Rose]";
			mes "Bênçãos para Guillaume!";
		} else if (.@BGTeam$ == "Croix") {
			mes "[Swandery]";
			mes "Bênçãos para Croix!";
		}
		mes "Vamos aproveitar nossa gloriosa vitória!";
		mes strcharinfo(0)+", aqui está o emblema da sua vitória.";
	} else {
		set .@amount, getarg(0) == 2 ? .@amount_tie : .@amount_lose;
		if (.@BGTeam$ == "Guillaume") {
			mes "[Axl Rose]";
			mes "Você perdeu, mas se dedicou à batalha.";
			mes "Aqui está uma recompensa pela sua grande dedicação a Guillaume Marollo!";
			mes "Aceite esta derrota como lição, e vencerá no futuro.";
		} else if (.@BGTeam$ == "Croix") {
			mes "[Swandery]";
			mes "Ah, "+strcharinfo(0)+". Não fique triste.";
			mes "Mesmo sem vencer, fizemos nosso melhor.";
			mes "Aqui está um presente real de Croix, para que não se esqueça dessa batalha. Venceremos a próxima.";
		}
	}
	close2;
	
	// Set Rankings
	if( getbattleflag("bg_expansion_enable") ) {
		// Default Score
		if( getarg(0) == 1 ) {
			if( .@BGTeam$ == "Guillaume" ) {
				.@ScoreGuill = 1;
				.@ScoreCroix = 0;
			}
			else {
				.@ScoreGuill = 0;
				.@ScoreCroix = 1;
			}
		}
		else {
			if( .@BGTeam$ == "Guillaume" ) {
				.@ScoreGuill = 0;
				.@ScoreCroix = 1;
			}
			else {
				.@ScoreGuill = 1;
				.@ScoreCroix = 0;
			}
		}
		
		// Custom Score
		if( getargcount() >= 5 )
			.@ScoreGuill = getarg(4);
		if( getargcount() >= 6 )
			.@ScoreCroix = getarg(5);
		if( getargcount() >= 7 )
			callfunc "F_BG_RANKING", .@BGUID, (.@BGTeam$ == "Guillaume" ? 0 : 1), getarg(0), .@ScoreGuill, .@ScoreCroix;
	}
	
	if( !getbattleflag("bg_reward_enable") ) {
		// If the VIP system is enabled, VIP players receive an extra 2 badges.
		if (VIP_SCRIPT && vip_status(VIP_STATUS_ACTIVE))
			set .@amount, .@amount+2;

		set .@medal_gap, 500 - countitem(.@badge);
		if (.@medal_gap >= .@amount)
			getitem .@badge,.@amount;
		else
			getitem .@badge,.@medal_gap;
	}
	else {
		.@RewardType = getarg(0) == 1 ? 0 : (getarg(0) == 2 ? 2 : 1);
		bg_reward .@BGUID, .@RewardType, (VIP_SCRIPT && vip_status(VIP_STATUS_ACTIVE));
	}
	return;
}

// BG Ranking Function
//============================================================
// Computa Ranking de um Jogador.
//
// * callfunc "F_BG_RANKING", <Unique ID>, <Char ID>, <Team>, <Score A>, <Score B>;
//    Arg(0): Unique ID
//    Arg(1): Char ID
//    Arg(2): Team (0: Guillaume / 1: Croix)
//    Arg(3): Result
//    Arg(4): Score A
//    Arg(5): Score B
function	script	F_BG_RANKING	{
	.@bg_id_ = getarg(0);
	.@char_id_ = getarg(1);
	.@team_ = getarg(2);
	.@result_ = getarg(3);
	
	if( .@team_ == 0 ) {
		.@score_a_ = getarg(4);
		.@score_b_ = getarg(5);
	} else {
		.@score_a_ = getarg(5);
		.@score_b_ = getarg(4);
	}
	
	if( .@result_ == 0 )
		.@type_ = BGR_WINS;
	else if( .@result_ == 1 )
		.@type_ = BGR_LOSS;
	else
		.@type_ = BGR_TIED;

	bg_ranking_set .@type_, bg_ranking_get(.@type_, .@char_id_) + 1, .@char_id_;
	bg_ranking_set BGR_SCORE_WINS, bg_ranking_get(BGR_SCORE_WINS, .@char_id_) + .@score_a_, .@char_id_;
	bg_ranking_set BGR_SCORE_LOSS, bg_ranking_get(BGR_SCORE_LOSS, .@char_id_) + .@score_b_, .@char_id_;
	bg_ranking_set2 .@type_, 1, .@char_id_;
	bg_ranking_set2 BGR_SCORE_WINS, .@score_a_, .@char_id_;
	bg_ranking_set2 BGR_SCORE_LOSS, .@score_b_, .@char_id_;
	bg_ranking_save .@bg_id_, true, .@char_id_;
	return;
}

// Computa Ranking des ambos os Time.
//
// * callfunc "F_BG_RANKING_TEAM", <Unique ID>, <TeamA ID>, <TeamB ID>, <Result>, <Score Team A>, <Score Team B>, <Freeloop>;
//    Arg(0): Unique ID
//    Arg(1): TeamA ID
//    Arg(2): TeamB ID
//    Arg(3): Result (0: Guillaume Wins / 1: Croix Wins / 2: Tied )
//    Arg(4): Score A (Valores negativos irá computar a score sinalizada no jogador)
//    Arg(5): Score B (Valores negativos irá computar a score sinalizada no jogador)
//    Arg(6): Freeloop (0: no / 1: yes)
function	script	F_BG_RANKING_TEAM	{
	.@bg_id_ = getarg(0);
	.@team_a_ = getarg(1);
	.@team_b_ = getarg(2);
	.@result_ = getarg(3);
	.@score_a_ = getarg(4);
	.@score_b_ = getarg(5);
	
	if( getarg(6) )
		freeloop(1);

	deletearray $@arenamembers;
	bg_get_data .@team_a_, 1;
	for( .@i_=0; .@i_ < $@arenamemberscount; .@i_++ ) {
		.@name_$ = rid2name($@arenamembers[.@i_]);
		.@char_id_ = getcharid(0,.@name_$);
		if( .@char_id_ ) {
			if( .@score_a_ < 0 )
				.@score_a_ = bg_ranking_get2(BGR_SCORE_WINS, .@char_id_);
			if( .@score_b_ < 0 )
				.@score_b_ = bg_ranking_get2(BGR_SCORE_LOSS, .@char_id_);
			
			if( .@result_ == 2 )
				.@type_ = 2;
			else if( .@result_ == 1 )
				.@type_ = 1;
			else
				.@type_ = 0;
		
			callfunc "F_BG_RANKING", .@bg_id_, .@char_id_, 0, .@type_, .@score_a_, .@score_b_;
		}
	}

	deletearray $@arenamembers;
	bg_get_data .@team_b_, 1;
	for( .@i_=0; .@i_ < $@arenamemberscount; .@i_++ ) {
		.@name_$ = rid2name($@arenamembers[.@i_]);
		.@char_id_ = getcharid(0,.@name_$);
		if( .@char_id_ ) {
			if( .@score_a_ < 0 )
				.@score_a_ = bg_ranking_get2(BGR_SCORE_WINS, .@char_id_);
			if( .@score_b_ < 0 )
				.@score_b_ = bg_ranking_get2(BGR_SCORE_LOSS, .@char_id_);
				
			if( .@result_ == 2 )
				.@type_ = 2;
			else if( .@result_ == 1 )
				.@type_ = 0;
			else
				.@type_ = 1;

			callfunc "F_BG_RANKING", .@bg_id_, .@char_id_, 1, .@type_, .@score_a_, .@score_b_;
		}
	}
	
	if( getarg(6) )
		freeloop(0);
		
	return;
}