-	script	rewardcommand	HIDDEN_WARP_NPC,{
OnInit:
//==== CONF =====
	.sender$ = "Equipe Ragna Frost";
	.title$ = "Seu Presente Chegou";
	.body$ = "Obrigado por Jogar no Ragna Frost e Faça bom proveito do presente !";
	.zeny = 0;	// Default zent sent
	setarray .mailitem[0], 607, 617; // Default items (Max.5)
	setarray .mailamount[0], 3, 1; // Default items quantity
//===============	
	bindatcmd "reward", strnpcinfo(3)+"::OnAtcommand", 99;
	end;

OnAtcommand:
	if (.@atcmd_parameters$[0] == "all")
		.@mode = 1;
	if (.@atcmd_parameters$[0] == "map")
		.@mode = 2;
	if (.@mode) {
		if (getarraysize(.mailitem) != getarraysize(.mailamount)) {
			dispbottom "Erro.";
			end;
		}
		if (.@mode == 1)
			addrid(0, 0);
		else
			addrid(1, 0);
		if (checkvending(strcharinfo(0)))
			detachrid;
		if (.mailitem[0])
			mail getcharid(0), .sender$, .title$, .body$, .zeny, .mailitem, .mailamount;
		else
			mail getcharid(0), .sender$, .title$, .body$, .zeny;
		detachrid;
		end;
	}
	mes "Use [@reward all] enviar rodex para todos os jogadores online.";
	mes "Use [@reward map] enviar rodex para todos os jogadores no mesmo mapa.";
	while (true) {
		next;
		mes "Conteudo RoDex:";
		mes "" + callfunc("F_InsertComma",.zeny) + "z.";
		if (.mailitem[0]) {
			for ( .@i = 0; .@i < getarraysize(.mailitem); ++.@i )
				mes "" + .mailamount[.@i] + "x " + getitemname(.mailitem[.@i]) + ".";
		}
		switch(select("Fechar.", "Trocar Zeny.", "Trocar Item(s)")) {
		case 1:
			close;
		case 2:
			input .zeny;
			break;
		case 3:
			do {
				next;
				mes "[Lista de Itens]";
				if (.mailitem[0]) {
					for ( .@i = 0; .@i < getarraysize(.mailitem); ++.@i )
						mes "" + .mailamount[.@i] + "x " + getitemname(.mailitem[.@i]) + ".";
				}
				else
					mes "Vazio.";
				next;
				switch(select("Voltar", "Adicionar item", "Remover item", "Remover Todos")) {
				case 1:
					break;
				case 2:
					if (getarraysize(.mailitem) > 4) {
						mes "Você não pode adicionar mais itens. Máximo de 5.";
						break;
					}
					mes "Digite o ID do item";
					input .@newitem;
					if (getitemname(.@newitem) == "null") {
						mes "Item não encontrado.";
						break;
					}
					mes "- " + getitemname(.@newitem);
					if (getiteminfo(.@newitem, 2) == 4 || getiteminfo(.@newitem, 2) == 5 || getiteminfo(.@newitem, 2) == 12) {
						.@newqut = 1;
					}
					else {
						mes "Digite a quantidade do item.";
						input .@newqut;
						if (.@newqut < 1 || .@newqut > 1000) {
							mes "Quantidade invalida.";
							break;
						}
					}
					.mailitem[getarraysize(.mailitem)] = .@newitem;
					.mailamount[getarraysize(.mailamount)] = .@newqut;
					next;
					break;
				case 3:
					if (.mailitem[0]) {
						mes "Digite o índice para remover.";
						for ( .@i = 0; .@i < getarraysize(.mailitem); ++.@i )
							mes "" + .@i + ": " + .mailamount[.@i] + "x " + getitemname(.mailitem[.@i]) + ".";
						input .@i;
						if (.mailitem[.@i] == 0 || .mailamount[.@i] == 0)
							mes "Indice inválido.";
						else {
							deletearray .mailitem[.@i], 1;
							deletearray .mailamount[.@i], 1;
						}
					}
					else
						mes "Nenhum item para remover.";
					break;
				case 4:
					deletearray .mailitem[0], getarraysize(.mailitem);
					deletearray .mailamount[0], getarraysize(.mailamount);
					break;
				}
			} while (@menu != 1);
		}
	}
}